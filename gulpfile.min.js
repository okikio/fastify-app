"use strict";var last,gulp=require("gulp"),src=gulp.src,task=gulp.task,series=gulp.series,parallel=gulp.parallel,dest=gulp.dest,watch=gulp.watch,_require=require("gulp-sourcemaps"),init=_require.init,write=_require.write,_require2=require("gulp-beautify"),html=_require2.html,js=_require2.js,css=_require2.css,webpackStream=require("webpack-stream"),autoprefixer=require("autoprefixer"),_require3=require("child_process"),spawn=_require3.spawn,htmlmin=require("gulp-htmlmin"),postcss=require("gulp-postcss"),uglify=require("gulp-uglify"),rename=require("gulp-rename"),babel=require("gulp-babel"),_require4=require("fs"),writeFile=_require4.writeFile,cssnano=require("cssnano"),config=require("./config"),webpack=require("webpack"),sass=require("gulp-sass"),pug=require("gulp-pug"),$if=require("gulp-if"),pages=config.pages,plugins=[autoprefixer,cssnano],htmlMinOpts={collapseWhitespace:!0,minifyCSS:!0,minifyJS:!0,processScripts:["application/ld+json"],removeComments:!0,removeEmptyAttributes:!1,removeRedundantAttributes:!1},minSuffix={suffix:".min"},watchDelay={delay:500},publicDest="public",webpackConfig={devtool:"source-map",mode:process.env.dev?"development":"production",output:{filename:"app.min.js"},module:{rules:[{test:/\.(js|jsx)$/,exclude:/(node_modules)/,use:"babel-loader"}]}},stringify=function(e){var s=[];return JSON.stringify(e,function(e,i){return"function"==typeof i?(s.push(i.toString()),"_"):i},4).replace(/\"_\"/g,function(){return s.shift()})},exec=function(s,r){var e=s.split(/\s+/g);return spawn(e[0],e.slice(1),{stdio:"inherit"}).on("data",function(e){return process.stdout.write(e)}).on("exit",function(e){var i=null;e&&((i=new Error('Command "'+s+'" exited with wrong status code "'+e+'"')).code=e,i.cmd=s),r&&r(i)})},execSeries=function(s,r){var e=[];return function i(){e.push(exec(s.shift(),function(e){e?r(e):s.length?i():r(null)}))}(),e};task("html",function(){for(var e in pages)last=src("views/app.pug").pipe(rename({basename:e,extname:".html"})).pipe(pug({locals:pages[e]})).pipe($if("false"==process.env.dev,htmlmin(htmlMinOpts),html({indent_size:4}))).pipe(dest(publicDest));return last}),task("css",function(){return src("src/scss/app.scss").pipe(init()).pipe(sass().on("error",sass.logError)).pipe($if("false"==process.env.dev,postcss(plugins),css({indent_size:4}))).pipe(rename(minSuffix)).pipe(write(".")).pipe(dest("".concat(publicDest,"/css")))}),task("js",function(){return src("src/js/app.js",{allowEmpty:!0}).pipe(webpackStream(webpackConfig,webpack)).pipe($if("false"==process.env.dev,uglify(),js({indent_size:4}))).pipe(dest("".concat(publicDest,"/js")))}),task("server",function(){return src(["*.js","!*.min.js","!gulpfile.js","!config.js","!config-dev.js"],{allowEmpty:!0}).pipe(babel()).pipe(uglify()).pipe(rename(minSuffix)).pipe(dest("."))}),task("config",function(){var e="module.exports = ".concat(stringify(config),";");return writeFile("./config.min.js",e,function(e){if(e)throw e}),src("config.min.js",{allowEmpty:!0}).pipe(babel()).pipe(uglify()).pipe(dest(".")),src("config.min.js",{allowEmpty:!0}).pipe(js({indent_size:4})).pipe(rename({basename:"config-dev",extname:".js"})).pipe(dest("."))}),task("config:watch",function(e){exec("gulp config server html --gulpfile ./gulpfile.min.js",function(){return e()})}),task("update",function(){return src("gulpfile.js",{allowEmpty:!0}).pipe(babel()).pipe(uglify()).pipe(rename(minSuffix)).pipe(dest("."))}),task("gulpfile:watch",function(e){exec("gulp update",function(){return e()})}),task("git",function(e){execSeries(["git add .","git commit -m 'Upgrade'","git push -u origin master"],function(){return e()})}),task("default",parallel(series("update","config","server","html"),"js","css")),task("watch",function(){watch(["config.js","containers/*.js"],watchDelay,series("config:watch")),watch("gulpfile.js",watchDelay,series("gulpfile:watch","server")),watch(["server.js","plugin.js"],watchDelay,series("server")),watch("views/**/*.pug",watchDelay,series("html","server")),watch("src/**/*.scss",watchDelay,series("css","server")),watch("src/**/*.js",watchDelay,series("js","server"))});