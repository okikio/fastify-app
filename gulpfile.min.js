'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var dotenv = _interopDefault(require('dotenv'));
var gulp = _interopDefault(require('gulp'));
var rollupPluginNodeResolve = _interopDefault(require('rollup-plugin-node-resolve'));
var rollupPluginNodeBuiltins = _interopDefault(require('rollup-plugin-node-builtins'));
var browserSync$1 = _interopDefault(require('browser-sync'));
var gulpSourcemaps = _interopDefault(require('gulp-sourcemaps'));
var rollupPluginCommonjs = _interopDefault(require('rollup-plugin-commonjs'));
var rollupPluginBabel = _interopDefault(require('rollup-plugin-babel'));
var fastStringify = _interopDefault(require('fast-stringify'));
var rollupPluginJson = _interopDefault(require('rollup-plugin-json'));
var gulpInlineSource = _interopDefault(require('gulp-inline-source'));
var gulpStringReplace = _interopDefault(require('gulp-string-replace'));
var gulpBeautify = _interopDefault(require('gulp-beautify'));
var gulpBetterRollup = _interopDefault(require('gulp-better-rollup'));
var child_process = _interopDefault(require('child_process'));
var gulpHtmlmin = _interopDefault(require('gulp-htmlmin'));
var cloudinary = _interopDefault(require('cloudinary'));
var gulpPostcss = _interopDefault(require('gulp-postcss'));
var gulpTerser = _interopDefault(require('gulp-terser'));
var gulpRename = _interopDefault(require('gulp-rename'));
var fs = _interopDefault(require('fs'));
var gulpSass = _interopDefault(require('gulp-sass'));
var gulpPug = _interopDefault(require('gulp-pug'));

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var _stringify = function _stringify(obj) {
  var fns = [];
  var json = fastStringify(obj, function (key, val) {
    if (typeof val == "function") {
      fns.push(val.toString());
      return "_";
    }

    return val;
  }, 4);
  return json.replace(/"_"/g, function () {
    return fns.shift();
  });
};

var stringify_1 = {
  stringify: fastStringify,
  _stringify: _stringify
};

var browserlist = {
  "modern": ["> 10%"],
  "general": ["defaults, IE 11"]
};
var babelConfig = {
  "node": {
    "presets": ["@babel/preset-env"]
  }
};
["modern", "general"].forEach(function (type) {
  var gen = type == 'general';
  babelConfig[type] = {
    "babelrc": false,
    "presets": [["@babel/preset-env", {
      "useBuiltIns": "usage",
      "modules": 'false',
      "spec": true,
      "forceAllTransforms": gen,
      "corejs": "3.2.1",
      "targets": {
        "browsers": browserlist[type]
      }
    }]]
  };
});

var _export = _objectSpread2({
  babelConfig: babelConfig
}, browserlist);

var browserlist_1 = _export;

// Choose the defined value in a list of 2 values
var pick = function pick(a, b) {
  return a == undefined || a == null ? b : a;
};

var _process = process,
    env = _process.env;
if (!('dev' in env)) dotenv.config();
var dev = 'dev' in env && env.dev.toString() == "true";
var staticSite = 'staticSite' in env && env.staticSite == "true";
/*
    -- Rules --
    General rules to use the containers.

    Containers are functions that return JSON Objects, these combine together to make a huge JSON Object tree. 
    Pug takes the JSON and renders it for each page of the site allowing for granular control.
    Containers are used in the `./config.js` file, along with other info. to create pages.
    Container functions support Arrays as well as Arguments.

    There are 3 major type of containers:
    * Components
    * Attributes
    * Class Attributes
    
    ---

    - Components represent HTML elements, sections, layers, etc...
    - Attributes give a component basic data to use to be display, or to be used in displaying a component, eg. img (it requires src, and href attributes).
    - Class Attributes are specific attributes that give a component its style, font, color, etc...


    -- Beware --
    Many components require certain components be bundled together to work properly.
    * class_add(...) only work in _class(...) functions 
        eg. layer(
            ...,
            _class([
                padding(["horz", "vert", ...]), // Returns "layout-padding-horz layout-padding-vert ..."
                class_add("layout-margin") ("horz", "vert", ...), // Returns "layout-margin-horz layout-margin-vert ...", the same as `margin(...)`
                "random-string-property-class"
            ])
        )

    * tabs(...) requires the link(...) function
        eg. layer(
            ...,
            _class([
                padding("horz", "vert", ...), // Returns "layout-padding-horz layout-padding-vert ..."
                class_add("layout-margin") ("horz", "vert", ...), // Returns "layout-margin-horz layout-margin-vert ...", the same as `margin(...)`
                "random-string-property-class"
            ])
        )
*/

var isArray = Array.isArray;
var assign = Object.assign; // Allows the use of the first argument if it is an Array

var anyArgs = function anyArgs(args) {
  return isArray(args[0]) ? args[0] : args;
}; // Attributes for components


var attr = function attr(_attr, defaults, list) {
  return function () {
    for (var _len = arguments.length, vals = new Array(_len), _key = 0; _key < _len; _key++) {
      vals[_key] = arguments[_key];
    }

    var val = list ? anyArgs(vals) : vals[0];
    return _defineProperty({}, _attr, pick(val, defaults));
  };
}; // Class attribute container


var _class = function _class() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return attr("class", "")(anyArgs(args).join(' '));
}; // The base for containers that add to the class attribute


var class_add = function class_add(prefix) {
  return function () {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return args.length ? anyArgs(args).map(function (val) {
      return "".concat(prefix, "-").concat(val);
    }).join(' ') : prefix;
  };
}; // The base component layer and layout inherit from, allows for components as children


var component = function component(type) {
  return function () {
    for (var _len4 = arguments.length, props = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      props[_key4] = arguments[_key4];
    }

    return _defineProperty({}, type, assign.apply(void 0, [{}].concat(_toConsumableArray(anyArgs(props)))));
  };
}; // -- Classes --


var font = class_add("style-font"); // Font of a component

var color = class_add("style-color"); // Color of a component

var margin = class_add("layout-margin"); // Margins of a component

var padding = class_add("layout-padding"); // Paddings of a component

var background = class_add("layer-color"); // Background of a component

var _col = class_add("layout-col"); // Layout Column Classes for a component


var _layer = class_add("layer"); // Layer Classes for a component


var _layout = class_add("layout"); // Layout Classes for a component


var _style = class_add("style"); // General Style of a component
// -- Attributes --


var href = attr("href", "/"); // Href attribute

var title = attr("title", "Title"); // Title attribute

var type = attr("type", "Blank"); // Type of a component

var content = attr("content", "..."); // Content of a component

var values = attr("values", [], true); // The values property

var src = attr("src", "/assets/city.webp"); // Src attribute container

var alt = attr("alt", "An iamge of a bustling city."); // Alt attribute container
// -- Components --

var link = component("a"); // Link component

var img = component("img"); // Image component

var row = component("row"); // Row component

var col = component("col"); // Column component

var tabs = component("tabs"); // Tabs component

var tile = component("tile"); // Tile layer component

var hero = component("hero"); // Hero layer component

var layer = component("layer"); // The layer component has access to the various styles available

var layout = component("layout"); // The layout component has access to the various layouts available

var section = component("section"); // The section component
// -- Shortform Components --

var _link = function _link(_content, _href) {
  return link([href(_href + (dev && staticSite ? _href == "/" ? "index.html" : ".html" : "")), content(_content)]);
}; // Allows a user to set specific types of sections (eg. header, main, footer, etc...)


var _section = function _section(_type) {
  return function () {
    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }

    return section([].concat(_toConsumableArray(anyArgs(args)), [type(_type)]));
  };
};

var _header = _section("header"); // The section header component


var _main = _section("main"); // The section main component


var _footer = _section("footer"); // The section footer component


var _tabs = function _tabs() {
  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
    args[_key6] = arguments[_key6];
  }

  return tabs([values(anyArgs(args).map(function (val) {
    return _link(val.toLowerCase(), "/".concat(val));
  }))]);
};

var _img = function _img() {
  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
    args[_key7] = arguments[_key7];
  }

  var _anyArgs = anyArgs(args),
      _anyArgs2 = _toArray(_anyArgs),
      _anyArgs2$ = _anyArgs2[0],
      _src = _anyArgs2$ === void 0 ? src().src : _anyArgs2$,
      _anyArgs2$2 = _anyArgs2[1],
      _alt = _anyArgs2$2 === void 0 ? alt().alt : _anyArgs2$2,
      $args = _anyArgs2.slice(2);

  return img.apply(void 0, [src(_src), alt(_alt)].concat(_toConsumableArray(anyArgs($args))));
};

var _hero = function _hero() {
  for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
    args[_key8] = arguments[_key8];
  }

  var _anyArgs3 = anyArgs(args),
      _anyArgs4 = _toArray(_anyArgs3),
      _anyArgs4$ = _anyArgs4[0],
      $title = _anyArgs4$ === void 0 ? "Title" : _anyArgs4$,
      _anyArgs4$2 = _anyArgs4[1],
      $img = _anyArgs4$2 === void 0 ? [] : _anyArgs4$2,
      $args = _anyArgs4.slice(2);

  return hero([title($title), _img($img)].concat(_toConsumableArray(anyArgs($args))));
};

var _tile = function _tile() {
  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
    args[_key9] = arguments[_key9];
  }

  var _anyArgs5 = anyArgs(args),
      _anyArgs6 = _toArray(_anyArgs5),
      $title = _anyArgs6[0],
      $content = _anyArgs6[1],
      $args = _anyArgs6.slice(2);

  return tile([title($title), content($content)].concat(_toConsumableArray(anyArgs($args))));
};

var _content = function _content() {
  for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
    args[_key10] = arguments[_key10];
  }

  var _anyArgs7 = anyArgs(args),
      _anyArgs8 = _toArray(_anyArgs7),
      $txt = _anyArgs8[0],
      _anyArgs8$ = _anyArgs8[1],
      $class = _anyArgs8$ === void 0 ? [] : _anyArgs8$,
      $args = _anyArgs8.slice(2);

  return assign.apply(void 0, [content($txt), _class($class)].concat(_toConsumableArray(anyArgs($args))));
}; // Shared similarites between page containers


var page = function page() {
  var defaults = [title("Page"), _tabs("about", "projects", "contact")];

  for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
    args[_key11] = arguments[_key11];
  }

  return component("page")(assign.apply(void 0, [assign.apply(void 0, defaults)].concat(_toConsumableArray(anyArgs(args)))));
};

assign(page, {
  _content: _content,
  _col: _col,
  _style: _style,
  _layer: _layer,
  _layout: _layout,
  type: type,
  _header: _header,
  _main: _main,
  _footer: _footer,
  _link: _link,
  _tabs: _tabs,
  _tile: _tile,
  _img: _img,
  _hero: _hero,
  values: values,
  title: title,
  tile: tile,
  tabs: tabs,
  src: src,
  section: section,
  row: row,
  page: page,
  padding: padding,
  margin: margin,
  link: link,
  layout: layout,
  layer: layer,
  img: img,
  href: href,
  hero: hero,
  font: font,
  content: content,
  component: component,
  color: color,
  col: col,
  _class: _class,
  class_add: class_add,
  background: background,
  attr: attr,
  alt: alt
});
var containers = page;

var attr$1 = containers.attr,
    section$1 = containers.section,
    _img$1 = containers._img,
    background$1 = containers.background,
    _tile$1 = containers._tile,
    _col$1 = containers._col,
    _style$1 = containers._style,
    _layer$1 = containers._layer,
    _layout$1 = containers._layout,
    _header$1 = containers._header,
    _main$1 = containers._main,
    values$1 = containers.values,
    title$1 = containers.title,
    row$1 = containers.row,
    page$1 = containers.page,
    padding$1 = containers.padding,
    margin$1 = containers.margin,
    _link$1 = containers._link,
    layout$1 = containers.layout,
    layer$1 = containers.layer,
    _hero$1 = containers._hero,
    font$1 = containers.font,
    _content$1 = containers._content,
    color$1 = containers.color,
    col$1 = containers.col,
    _class$1 = containers._class;
var carImg = "/assets/white_car.webp?w=400&h=400";

var _name = attr$1("name", "index");

var noFooter = attr$1("noFooter", true);

var newFooter = function newFooter() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "2019 Okiki Ojo";
  return layer$1([_class$1(["footer"]), layout$1([section$1([_class$1([padding$1(), _style$1("center", "spaceout-small"), font$1("weight-bold", "title")]), values$1([value])])])]);
};

var indent = _content$1(" ", [padding$1("top"), margin$1("left-large"), _layout$1("inline-block")]);

var spacingColumns = function spacingColumns(size) {
  return col$1([_class$1([_layout$1("block"), _col$1(size.toString())])]);
};

var config = {
  "websiteURL": "https://app-fast.herokuapp.com/",
  "cloud_name": "okikio-assets",
  "imageURLConfig": {
    "fetch_format": "auto",
    "client_hints": true,
    // "flags": "lossy",
    "crop": "scale",
    "quality": 30,
    "dpr": "auto"
  },
  "pages": {
    "404": page$1([_name("404"), title$1("Ooops!"), values$1([// Intro layer
    layer$1([_class$1([padding$1("horz", "large-top")]), layout$1([_class$1([_layout$1("shorten", "contain")]), values$1([_header$1(title$1("404, Page Not Found.")), _main$1([_class$1([_style$1("center")]), values$1([indent, "Sorry, the page you are looking for doesn't exist. How about going back ", _link$1("home", "/"), "."])])])])]), // End Intro Layer
    // Footer
    newFooter()]), noFooter()]),
    "about": page$1([_name("about"), title$1("The Sub Page"), values$1([// Hero Layer
    _hero$1(["Subpage.", [carImg, "A city Image"]]), // End Hero Layer
    // Intro layer
    layer$1([_class$1([padding$1("horz", "large-top")]), layout$1([_class$1([_layout$1("shorten", "contain")]), values$1([_header$1(title$1("Lorem itpsuim")), _main$1([values$1([indent, "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer\n                                        took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\n                                        It was popularised in the 1960s with the release of Letraset sheets\n                                        containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum, ", _link$1("home", "/")])])])])]), // End Intro Layer
    // Footer
    newFooter()]), noFooter()]),
    "index": page$1([_name(), title$1("Hello There"), values$1([// Hero layer
    _hero$1(["Relax.", [carImg, "A city Image"]]), // End Hero layer
    // Intro layer
    layer$1([_class$1([padding$1("horz", "large-top")]), layout$1([_class$1([_layout$1("shorten", "contain")]), values$1([_header$1(title$1("Lorem itpsuim")), _main$1([values$1([indent, "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer\n                                        took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\n                                        It was popularised in the 1960s with the release of Letraset sheets\n                                        containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum, ", _link$1("run", "/about")])])])])]), // End Intro layer
    // Listings layer
    layer$1([layout$1([_class$1([padding$1("horz", "large-top")]), section$1([_class$1([_layout$1("shorten", "contain")]), values$1([_header$1(title$1("Listings")), _main$1([_class$1([padding$1("top"), _style$1("line-height-double")]), values$1([row$1([values$1([col$1([_class$1([_col$1("2"), padding$1("bottom-small")]), values$1([_content$1("03/03", [_style$1("bold"), font$1("16")])])]), col$1([_class$1([_col$1("3"), padding$1("bottom")]), values$1([_content$1("2018", [_style$1("line-height-double", "bold"), _layout$1("block"), font$1("16")]), _content$1("E-commerse", [_style$1("line-height-double"), _layout$1("block"), font$1("16")]), _content$1("Design Executive", [_style$1("line-height-double"), _layout$1("block"), font$1("16")])])]), col$1([_class$1([_col$1("7")]), values$1([_content$1("Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                                        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\n                                                        unknown printer took a galley of type and scrambled it to make a type specimen book.", [_style$1("line-height-double"), font$1("16")])])])])])])])])])])]), // End Listings layer
    // Banner layer 1
    layer$1([layout$1([_class$1([padding$1("horz", "vert-large"), _layout$1("contain-large")]), values$1([_header$1([title$1(""), _class$1([_layout$1("vert"), _style$1("bold-font", "500"), "h2"]), values$1(["Got your attention.", " ", _content$1("Good!", [color$1("primary")])])])])])]), // End Banner layer 1
    // Banner layer 2
    layer$1([_class$1([background$1("primary")]), layout$1([_class$1([_layout$1("contain-large", "enlarge-vert")]), values$1([_header$1([title$1(""), _class$1([_layout$1("vert"), _style$1("bold-font", "500"), "h2", color$1("white")]), values$1(["Got your attention.", " ", _content$1("Good!", [color$1("tertiary")])])])])])]), // End Banner layer 2
    // Banner layer 3
    layer$1([_class$1([background$1("secondary")]), layout$1([_class$1([_layout$1("contain-large", "enlarge-vert")]), values$1([_header$1([title$1(""), _class$1([_layout$1("vert"), _style$1("bold-font", "500"), "h2", color$1("white")]), values$1(["Got your attention.", " ", _content$1("Good!", [color$1("tertiary")])])])])])]), // End Banner layer 3
    // Banner layer 4
    layer$1([_class$1([background$1("tertiary")]), layout$1([_class$1([_layout$1("contain-large", "enlarge-vert")]), values$1([_header$1([title$1(""), _class$1([_layout$1("vert"), _style$1("bold-font", "500"), "h2", color$1("dark")]), values$1(["Got your attention.", " ", _content$1("Good!", [color$1("secondary")])])])])])]), // End Banner layer 4
    // Breakthrough layer
    layer$1([layout$1([_class$1([_layout$1("contain-large"), padding$1("horz", "large")]), values$1([_main$1([_class$1([_layout$1("vert")]), values$1([row$1([values$1([col$1([_class$1([_col$1("6"), padding$1("bottom-small", "right-large")]), values$1([_content$1("Breakthrough<br>Limits!", [_style$1("bold", "line-height"), "h3", color$1("primary")])])]), col$1([_class$1(_col$1("6")), values$1([_content$1("Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                                        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\n                                                        unknown printer took a galley of type and scrambled it to make a type specimen book.", [_layout$1("block"), _style$1("line-height-double"), font$1("16")])])])])])])])])])]), // End Breakthrough layer
    // Image Column layer
    layer$1([layout$1([_class$1([_layout$1("contain-large")]), values$1([_main$1([_class$1([_layout$1("shorten-vert")]), values$1([row$1([_class$1([margin$1("dull")]), values$1([spacingColumns(3), col$1([_class$1([_col$1("9"), padding$1("small")]), values$1([_tile$1(["", "", _class$1([_layer$1("box", "surface", "shadow--1"), _layout$1("block")])])])])])]), row$1([_class$1([margin$1("dull")]), values$1([col$1([_class$1([_col$1("9"), padding$1("small", "vert-large")]), values$1([_tile$1(["Google Designs", "", _img$1("/assets/city.webp?w=250", "City Alt"), _class$1([_layer$1("box", "surface", "shadow--1"), _layout$1("block")])])])]), spacingColumns(3)])])])])])])]), // End Image Column layer
    // Image Banner layer
    layer$1([layout$1([_class$1([]), values$1([_main$1([values$1([row$1([_class$1([margin$1("dull")]), values$1([col$1([_class$1([_col$1("12"), padding$1("dull")]), values$1([_tile$1(["", "", _class$1([_layer$1("box", "box-flat", "box-tall", "surface", "shadow--2"), _layout$1("block")])])])])])])])])])])]), // End Image Banner layer
    // Footer
    // newFooter(),
    // Next Page layer
    layer$1([_class$1([background$1("black")]), layout$1([_class$1([_layout$1("contain"), padding$1("horz", "top")]), values$1([section$1([_class$1(["h4", _layout$1("shorten")]), values$1([_header$1([title$1("Next"), _class$1([color$1("white"), font$1("light", "thin"), _style$1("spaceout")])]), _main$1([_class$1([_style$1("center"), padding$1("vert")]), values$1([_content$1("NASA Rocket Ship", ["h1", _style$1("bold", "primary")])])])])]), section$1([_class$1([_layer$1("box", "box-flat", "surface", "shadow"), _layout$1("block")])])])])])]), noFooter()])
  },
  "routes": {
    "/": "index",
    "/about": "about"
  },
  "social_links": [{
    "name": ["Twitter", "Tw"],
    "href": "https://twitter.com/okikio_dev"
  }, {
    "name": ["Instagram", "In"],
    "href": "https://www.instagram.com/okikio.dev/"
  }, {
    "name": ["Github", "Git"],
    "href": "https://github.com/okikio"
  }, {
    "name": ["LinkedIn", "Lk"],
    "href": "https://www.linkedin.com/in/okiki-o-a5287213b"
  }, {
    "name": ["Mail", "@"],
    "href": "mailto:okikio.dev@gmail.com"
  }],
  "projects": [{
    "name": "Leader",
    "url": "leader",
    "detail": "Lorem itpsim",
    "info": "The nature of leadership",
    "img": {
      "src": "/assets/white-flower.jpg",
      "alt": ""
    }
  }, {
    "name": "Science",
    "url": "science",
    "detail": "Lorem itpsim",
    "info": "Info about Leukemia",
    "img": {
      "src": "/assets/city.jpg",
      "alt": ""
    }
  }, {
    "name": "Civics",
    "url": "civics",
    "detail": "Lorem itpsim",
    "info": "A little about renewable sources of energy",
    "img": {
      "src": "/assets/blue-sky.jpg",
      "alt": ""
    }
  }]
};

var _process$1 = process,
    env$1 = _process$1.env;
if (!('dev' in env$1)) dotenv.config();
var dev$1 = 'dev' in env$1 && env$1.dev.toString() == "true";
var debug = 'debug' in env$1 && env$1.debug.toString() == "true";
var staticSite$1 = 'staticSite' in env$1 && env$1.staticSite == "true";
var src$1 = gulp.src,
    task = gulp.task,
    series = gulp.series,
    parallel = gulp.parallel,
    dest = gulp.dest,
    watch = gulp.watch;
var browserSync = browserSync$1.create();
var init = gulpSourcemaps.init,
    write = gulpSourcemaps.write;
var stringify = stringify_1.stringify;
var babelConfig$1 = browserlist_1.babelConfig;
var html = gulpBeautify.html,
    js = gulpBeautify.js;
var spawn = child_process.spawn;
var assets = cloudinary.v2;
var writeFile = fs.writeFile;
var pages = config.pages,
    cloud_name = config.cloud_name,
    imageURLConfig = config.imageURLConfig;
var assetURL = "https://res.cloudinary.com/".concat(cloud_name, "/");
assets.config({
  cloud_name: cloud_name,
  secure: true
});
var srcMapsWrite = ["../maps", {
  sourceMappingURL: function sourceMappingURL(file) {
    return "/maps/".concat(file.relative, ".map");
  }
}];
var htmlMinOpts = {
  minifyJS: true,
  minifyCSS: true,
  removeComments: true,
  collapseWhitespace: true,
  removeEmptyAttributes: false,
  removeRedundantAttributes: false,
  processScripts: ["application/ld+json"]
};
var minifyOpts = {
  mangle: {
    reserved: ["$super"]
  }
};
var minSuffix = {
  suffix: ".min"
};
var watchDelay = {
  delay: 500
};
var publicDest = 'public';
var assign$1 = Object.assign; // Streamline Gulp Tasks

var stream = function stream(_src) {
  var _opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var done = arguments.length > 2 ? arguments[2] : undefined;

  var _end = _opt.end || [];

  var host = src$1(_src, _opt.opts),
      _pipes = _opt.pipes || [],
      _dest = _opt.dest || publicDest;

  return new Promise(function (resolve, reject) {
    _pipes.forEach(function (val) {
      if (val != undefined && val != null) {
        host = host.pipe(val).on('error', reject);
      }
    });

    host = host.pipe(dest(_dest)).on('end', typeof done == 'function' ? done : resolve); // Output

    _end.forEach(function (val) {
      if (val != undefined && val != null) {
        host = host.pipe(val).on('error', reject);
      }
    });
  });
}; // A list of streams


var streamList = function streamList() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return Promise.all((Array.isArray(args[0]) ? args[0] : args).map(function (_stream) {
    return Array.isArray(_stream) ? stream.apply(void 0, _toConsumableArray(_stream)) : _stream;
  }));
}; // Based on: [https://gist.github.com/millermedeiros/4724047]


var _exec = function _exec(cmd) {
  var parts = cmd.toString().split(/\s+/g);
  return new Promise(function () {
    var resolve = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
    spawn(parts[0], parts.slice(1), {
      shell: true,
      stdio: 'inherit'
    }).on('data', function (data) {
      return process.stdout.write(data);
    }).on('error', function (err) {
      return console.error(err);
    }).on('close', function () {
      return (resolve || function () {})();
    });
  });
}; // Execute multiple commands in series


var _execSeries = function _execSeries() {
  for (var _len2 = arguments.length, cmds = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    cmds[_key2] = arguments[_key2];
  }

  return Promise.all(cmds.reduce(function (acc, cmd, i) {
    if (cmd != null && cmd != undefined) acc[i] = typeof cmd == "string" ? _exec(cmd) : cmd;
    return acc;
  }, []));
};

task('html', function () {
  var pageNames = Object.keys(pages);
  var pageValues = Object.values(pages);
  return streamList(pageValues.map(function (page, i) {
    return ['views/app.pug', {
      pipes: [// Rename
      gulpRename({
        basename: pageNames[i],
        extname: ".html"
      }), // Pug compiler
      gulpPug({
        locals: _objectSpread2({}, page, {
          cloud_name: cloud_name,
          dev: dev$1,
          staticSite: staticSite$1
        })
      }), // Minify or Beautify html
      dev$1 ? html({
        indent_size: 4
      }) : gulpHtmlmin(htmlMinOpts), // Replace /assets/... URLs
      gulpStringReplace(/\/assets\/[^\s"']+/g, function (url) {
        var URLObj = new URL("".concat(assetURL + url).replace("/assets/", ""));
        var query = URLObj.searchParams;
        var queryString = URLObj.search;
        var height = query.get("h");
        var width = query.get("w") || 'auto';

        var imgURLConfig = _objectSpread2({}, imageURLConfig, {
          width: width,
          height: height
        });

        return staticSite$1 ? (/\/raw\/[^\s"']+/.test(url) ? "".concat(assetURL + url.replace(queryString, '')) : assets.url(url.replace(queryString, ''), imgURLConfig)).replace("/assets/", "") : url;
      })]
    }];
  }));
});
task("css", function () {
  return stream('src/scss/*.scss', {
    pipes: [init(), // Sourcemaps init
    // Minify scss to css
    gulpSass({
      outputStyle: dev$1 ? 'expanded' : 'compressed'
    }).on('error', gulpSass.logError), // Autoprefix &  Remove unused CSS
    gulpPostcss(), // Rest of code is in postcss.config.js
    gulpRename(minSuffix), // Rename
    write.apply(void 0, srcMapsWrite) // Put sourcemap in public folder
    ],
    dest: "".concat(publicDest, "/css"),
    // Output
    end: [browserSync.stream()]
  });
});
task("js", function () {
  return streamList([].concat(_toConsumableArray(["modern"].concat(!dev$1 ? "general" : []).map(function (type) {
    var gen = type == 'general';
    var suffix = gen ? '' : '.modern';
    return ['src/js/app.js', {
      opts: {
        allowEmpty: true
      },
      pipes: [// init(), // Sourcemaps init
      // Bundle Modules
      gulpBetterRollup({
        plugins: [rollupPluginNodeBuiltins(), // Access to builtin Modules
        rollupPluginJson(), // Parse JSON Exports
        rollupPluginCommonjs(), // Use CommonJS to compile the program
        rollupPluginNodeResolve(), // Bundle all Modules
        rollupPluginBabel(babelConfig$1[type]) // Babelify file for uglifing
        ]
      }, gen ? 'iife' : 'es'), // Minify the file
      debug ? null : gulpTerser(assign$1(minifyOpts, gen ? {
        ie8: true,
        ecma: 5
      } : {
        ecma: 8
      })), gulpRename("app".concat(suffix, ".min.js"))],
      dest: "".concat(publicDest, "/js") // Output

    }];
  })), [dev$1 && staticSite$1 ? null : ['src/js/app.vendor.js', {
    opts: {
      allowEmpty: true
    },
    pipes: [init(), // Sourcemaps init
    // Bundle Modules
    gulpBetterRollup({
      plugins: [rollupPluginNodeBuiltins(), // Access to builtin Modules
      rollupPluginJson(), // Parse JSON Exports
      rollupPluginCommonjs(), // Use CommonJS to compile the program
      rollupPluginNodeResolve(), // Bundle all Modules
      rollupPluginBabel(babelConfig$1.general) // ES5 file for uglifing
      ]
    }, 'iife'), // Minify the file
    debug ? null : gulpTerser(_objectSpread2({}, minifyOpts, {
      ie8: true,
      ecma: 5
    })), gulpRename(minSuffix), // Rename
    write.apply(void 0, srcMapsWrite) // Put sourcemap in public folder
    ],
    dest: "".concat(publicDest, "/js") // Output

  }]]));
});
task("server", function () {
  return streamList([["server.js", {
    opts: {
      allowEmpty: true
    },
    pipes: [// Bundle Modules
    gulpBetterRollup({
      plugins: [rollupPluginJson(), // Parse JSON Exports
      rollupPluginCommonjs(), // Use CommonJS to compile file
      rollupPluginBabel(babelConfig$1.node) // Babelify file for minifing
      ]
    }, 'cjs'), debug ? null : gulpTerser(_objectSpread2({}, minifyOpts, {
      ecma: 8
    })), // Minify the file
    gulpRename(minSuffix) // Rename
    ],
    dest: '.' // Output

  }]]);
});
task("config", function () {
  return streamList(new Promise(function (resolve, reject) {
    // Create config.min
    writeFile("./config.min.js", "module.exports = ".concat(stringify(config), ";"), function (err) {
      if (err) {
        reject();
        throw err;
      }

      resolve();
    });
  }), ["config.min.js", {
    opts: {
      allowEmpty: true
    },
    pipes: [// Minify the file
    gulpTerser(_objectSpread2({}, minifyOpts))],
    dest: '.' // Output

  }], dev$1 ? ["config.min.js", {
    opts: {
      allowEmpty: true
    },
    pipes: [js({
      indent_size: 4
    }), // Beautify the file
    // Rename
    gulpRename({
      basename: "config-dev",
      extname: ".js"
    })],
    dest: '.' // Output

  }] : null);
});
task("config:watch", function () {
  return _exec("gulp config html css");
});
task("update", function () {
  return stream("gulpfile.js", {
    opts: {
      allowEmpty: true
    },
    pipes: [// Bundle Modules
    gulpBetterRollup({
      plugins: [rollupPluginJson(), // Parse JSON Exports
      rollupPluginCommonjs(), // Use CommonJS to compile file
      rollupPluginBabel(babelConfig$1.node) // Babelify file for minifing
      ]
    }, 'cjs'), debug ? null : gulpTerser(_objectSpread2({}, minifyOpts, {
      ecma: 8
    })), // Minify the file
    gulpRename(minSuffix) // Rename
    ],
    dest: '.' // Output

  });
});
task("gulpfile:watch", function () {
  return _execSeries("gulp update", "gulp");
});
task("git", function () {
  return _execSeries("git add .", "git commit -m 'Upgrade'", "git push -u origin master");
});
task('inline', function () {
  return stream('public/*.html', {
    pipes: [// Inline external sources
    gulpInlineSource({
      compress: false
    })]
  });
}); // Gulp task to minify all files

task('dev', series("config", parallel("server", "html", "js"), "css")); // Gulp task to minify all files, and inline them in the pages

task('default', series("update", "dev", "inline")); // Gulp task to minify all files without -js

task('other', series("update", "config", parallel("server", "html"), "css", "inline")); // Gulp task to check to make sure a file has changed before minify that file files

task('watch', function () {
  browserSync.init({
    server: "./public"
  });
  watch(['server.js', 'plugin.js'], watchDelay, series('server'));
  watch(['config.js', 'containers.js'], watchDelay, series('config:watch'));
  watch(['gulpfile.js', 'postcss.config.js', 'util/*.js'], watchDelay, series('gulpfile:watch', 'css', 'js'));
  watch('views/**/*.pug', watchDelay, series('html', 'css'));
  watch('src/**/*.scss', watchDelay, series('css'));
  watch(['src/**/*.js', '!src/**/app.vendor.js'], watchDelay, series('js'));
  watch('src/**/app.vendor.js', watchDelay, series('js'));
  watch(['public/**/*', '!public/css/*.css']).on('change', browserSync.reload);
});
var gulpfile = {};

module.exports = gulpfile;
