"use strict";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,n)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(t,!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(t).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}var _process=process,env=_process.env;"dev"in env||require("dotenv").config();var dev="dev"in env&&"true"==env.dev.toString(),gulp=require("gulp"),src=gulp.src,task=gulp.task,series=gulp.series,parallel=gulp.parallel,dest=gulp.dest,watch=gulp.watch,_require=require("./browserslist".concat(dev?"":".min")),babelConfig=_require.babelConfig,nodeResolve=require("rollup-plugin-node-resolve"),builtins=require("rollup-plugin-node-builtins"),config=require("./config".concat(dev?"":".min")),_require2=require("gulp-sourcemaps"),init=_require2.init,write=_require2.write,commonJS=require("rollup-plugin-commonjs"),rollupBabel=require("rollup-plugin-babel"),rollupJSON=require("rollup-plugin-json"),uglify=require("gulp-uglify-es").default,inlineSrc=require("gulp-inline-source"),replace=require("gulp-string-replace"),stringify=require("./util/stringify"),_require3=require("gulp-beautify"),html=_require3.html,js=_require3.js,rollup=require("gulp-better-rollup"),_require4=require("child_process"),spawn=_require4.spawn,htmlmin=require("gulp-htmlmin"),assets=require("cloudinary").v2,postcss=require("gulp-postcss"),rename=require("gulp-rename"),newer=require("gulp-newer"),babel=require("gulp-babel"),_require5=require("fs"),writeFile=_require5.writeFile,sass=require("gulp-sass"),pug=require("gulp-pug"),pages=config.pages,cloud_name=config.cloud_name,imageURLConfig=config.imageURLConfig,staticSite="staticSite"in env&&"true"==env.staticSite,assetURL="https://res.cloudinary.com/".concat(cloud_name,"/");assets.config({cloud_name:cloud_name,secure:!0});var srcMapsWrite=".",htmlMinOpts={minifyJS:!0,minifyCSS:!0,removeComments:!0,collapseWhitespace:!0,removeEmptyAttributes:!1,removeRedundantAttributes:!1,processScripts:["application/ld+json"]},minSuffix={suffix:".min"},watchDelay={delay:500},publicDest="public",stream=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2?arguments[2]:void 0,n=src(e,r.opts),i=r.pipes||[],s=r.dest||publicDest;return new Promise(function(e,r){i.forEach(function(e){n=n.pipe(e).on("error",r)}),n=n.pipe(dest(s)).on("end","function"==typeof t?t:e)})},streamList=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return Promise.all(r.map(function(e){return Array.isArray(e)?stream.apply(void 0,_toConsumableArray(e)):e}))},_exec=function(e){var r=e.toString().split(/\s+/g);return new Promise(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){};spawn(r[0],r.slice(1),{shell:!0,stdio:"inherit"}).on("data",function(e){return process.stdout.write(e)}).on("error",function(e){return console.error(e)}).on("close",function(){return(e||function(){})()})})},_execSeries=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return Promise.all(r.map(function(e){return"string"==typeof e?_exec(e):e}))};task("html",function(){var e=Object.keys(pages),r=Object.values(pages);return streamList.apply(void 0,_toConsumableArray(r.map(function(r,t){return["views/app.pug",{pipes:[rename({basename:e[t],extname:".html"}),pug({locals:_objectSpread({},r,{cloud_name:cloud_name})}),dev?html({indent_size:4}):htmlmin(htmlMinOpts),replace(/\/assets\/[^\s\"\']+/g,function(e){var r=new URL("".concat(assetURL+e).replace("/assets/","")),t=r.searchParams,n=r.search,i=t.get("h"),s=t.get("w")||"auto",o=_objectSpread({},imageURLConfig,{width:s,height:i});return staticSite?(/\/raw\/[^\s\"\']+/.test(e)?"".concat(assetURL+e.replace(n,"")):assets.url(e.replace(n,""),o)).replace("/assets/",""):e})]}]})))}),task("css",function(){return stream("src/scss/*.scss",{pipes:[init(),sass({outputStyle:dev?"expanded":"compressed"}).on("error",sass.logError),postcss(),rename(minSuffix),write(srcMapsWrite)],dest:"".concat(publicDest,"/css")})}),task("js",function(){return streamList.apply(void 0,[].concat(_toConsumableArray(["modern"].concat(dev?"general":[]).map(function(e){return[["src/js/app.js",{opts:{allowEmpty:!0},pipes:[newer("".concat(publicDest,"/js/app").concat("general"==e?"":".modern",".min.js")),init(),rollup({plugins:[builtins(),commonJS(),nodeResolve(),rollupJSON(),rollupBabel(babelConfig[e])]},"general"==e?"umd":"es"),dev?js():uglify(),rename("app".concat("general"==e?"":".modern",".min.js")),write(srcMapsWrite)],dest:"".concat(publicDest,"/js")}]]}).flat()),[["src/js/app.vendor.js",{opts:{allowEmpty:!0},pipes:[newer("".concat(publicDest,"/js/app.vendor.min.js")),init(),rollup({plugins:[builtins(),commonJS(),nodeResolve(),rollupJSON(),rollupBabel(babelConfig.node)]},"umd"),dev?js():uglify(),rename(minSuffix),write(srcMapsWrite)],dest:"".concat(publicDest,"/js")}]]))}),task("server",function(){return stream(["*.js","!postcss.config.js","!*.min.js","!gulpfile.js","!config.js","!config-dev.js"],{opts:{allowEmpty:!0},pipes:[newer("./*.min.js"),babel(babelConfig.node),uglify(),rename(minSuffix)],dest:"."})}),task("config",function(){return streamList(new Promise(function(e,r){writeFile("./config.min.js","module.exports = ".concat(stringify(config),";"),function(t){if(t)throw r(),t;e()})}),["config.min.js",{opts:{allowEmpty:!0},pipes:[newer("./config.min.js"),babel(babelConfig.node),uglify()],dest:"."}],["config.min.js",{opts:{allowEmpty:!0},pipes:[newer("./config-dev.js"),js({indent_size:4}),rename({basename:"config-dev",extname:".js"})],dest:"."}])}),task("config:watch",function(){return _exec("gulp config server html --gulpfile ./gulpfile.min.js")}),task("update",function(){return stream("gulpfile.js",{opts:{allowEmpty:!0},pipes:[newer("./gulpfile.min.js"),babel(babelConfig.node),uglify(),rename(minSuffix)],dest:"."})}),task("gulpfile:watch",function(){return _execSeries("gulp update","gulp")}),task("git",function(){return _execSeries("git add .","git commit -m 'Upgrade'","git push -u origin master")}),task("inline",function(){return stream("public/*.html",{pipes:[inlineSrc({compress:!1})]})}),task("default",series("update","config",parallel("server","html","js"),"css","inline")),task("other",series("update","config",parallel("server","html"),"css","inline")),task("watch",function(){watch(["config.js","containers/*.js"],watchDelay,series("config:watch")),watch(["gulpfile.js","postcss.config.js"],watchDelay,series("gulpfile:watch","server")),watch(["server.js","plugin.js"],watchDelay,series("server")),watch("views/**/*.pug",watchDelay,series("html","server","css","inline")),watch("src/**/*.scss",watchDelay,series("css","server","inline")),watch("src/**/*.js",watchDelay,series("js","server","inline"))});