function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function ownKeys(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);e&&(i=i.filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})),t.push.apply(t,i)}return t}function _objectSpread2(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(t,!0).forEach(function(e){_defineProperty(r,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):ownKeys(t).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))})}return r}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}var _process=process,env=_process.env;"dev"in env||require("dotenv").config();var dev="dev"in env&&"true"==env.dev.toString(),gulp=require("gulp"),src=gulp.src,task=gulp.task,series=gulp.series,parallel=gulp.parallel,dest=gulp.dest,watch=gulp.watch,nodeResolve=require("rollup-plugin-node-resolve"),builtins=require("rollup-plugin-node-builtins"),_require=require("gulp-sourcemaps"),init=_require.init,write=_require.write,commonJS=require("rollup-plugin-commonjs"),rollupBabel=require("rollup-plugin-babel"),_require2=require("./util/stringify"),stringify=_require2.stringify,_require3=require("./browserlist"),babelConfig=_require3.babelConfig,rollupJSON=require("rollup-plugin-json"),inlineSrc=require("gulp-inline-source"),replace=require("gulp-string-replace"),_require4=require("gulp-beautify"),html=_require4.html,js=_require4.js,rollup=require("gulp-better-rollup"),_require5=require("child_process"),spawn=_require5.spawn,uglifyES5=require("gulp-uglify"),htmlmin=require("gulp-htmlmin"),assets=require("cloudinary").v2,postcss=require("gulp-postcss"),minify=require("gulp-minify"),rename=require("gulp-rename"),babel=require("gulp-babel"),newer=require("gulp-newer"),_require6=require("fs"),writeFile=_require6.writeFile,config=require("./config"),sass=require("gulp-sass"),pug=require("gulp-pug"),pages=config.pages,cloud_name=config.cloud_name,imageURLConfig=config.imageURLConfig,staticSite="staticSite"in env&&"true"==env.staticSite,assetURL="https://res.cloudinary.com/".concat(cloud_name,"/");assets.config({cloud_name:cloud_name,secure:!0});var srcMapsWrite=".",htmlMinOpts={minifyJS:!0,minifyCSS:!0,removeComments:!0,collapseWhitespace:!0,removeEmptyAttributes:!1,removeRedundantAttributes:!1,processScripts:["application/ld+json"]},minifyOpts={noSource:!0,ext:{min:".min.js"}},minSuffix={suffix:".min"},watchDelay={delay:500},publicDest="public",stream=function(e,r,t){var i=1<arguments.length&&void 0!==r?r:{},n=2<arguments.length?t:void 0,s=src(e,i.opts),l=i.pipes||[],o=i.dest||publicDest;return new Promise(function(e,r){l.forEach(function(e){null!=e&&null!=e&&(s=s.pipe(e).on("error",r))}),s=s.pipe(dest(o)).on("end","function"==typeof n?n:e)})},streamList=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return Promise.all((Array.isArray(r[0])?r[0]:r).map(function(e){return Array.isArray(e)?stream.apply(void 0,_toConsumableArray(e)):e}))},_exec=function(e){var r=e.toString().split(/\s+/g);return new Promise(function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){};spawn(r[0],r.slice(1),{shell:!0,stdio:"inherit"}).on("data",function(e){return process.stdout.write(e)}).on("error",function(e){return console.error(e)}).on("close",function(){return(e||function(){})()})})},_execSeries=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return Promise.all(r.map(function(e){return"string"==typeof e?_exec(e):e}))};task("html",function(){var t=Object.keys(pages),e=Object.values(pages);return streamList(e.map(function(e,r){return["views/app.pug",{pipes:[rename({basename:t[r],extname:".html"}),pug({locals:_objectSpread2({},e,{cloud_name:cloud_name})}),dev?html({indent_size:4}):htmlmin(htmlMinOpts),replace(/\/assets\/[^\s"']+/g,function(e){var r=new URL("".concat(assetURL+e).replace("/assets/","")),t=r.searchParams,i=r.search,n=t.get("h"),s=t.get("w")||"auto",l=_objectSpread2({},imageURLConfig,{width:s,height:n});return staticSite?(/\/raw\/[^\s"']+/.test(e)?"".concat(assetURL+e.replace(i,"")):assets.url(e.replace(i,""),l)).replace("/assets/",""):e})]}]}))}),task("css",function(){return stream("src/scss/*.scss",{pipes:[init(),sass({outputStyle:dev?"expanded":"compressed"}).on("error",sass.logError),postcss(),rename(minSuffix),write(srcMapsWrite)],dest:"".concat(publicDest,"/css")})}),task("js",function(){return streamList([].concat(_toConsumableArray(["modern"].concat(dev?[]:"general").map(function(e){var r="general"==e,t="general"==e?"":".modern";return["src/js/app.js",{opts:{allowEmpty:!0},pipes:[dev?newer("".concat(publicDest,"/js/app").concat(t,".min.js")):null,init(),rollup({plugins:[builtins(),commonJS(),nodeResolve(),rollupJSON(),rollupBabel(babelConfig[e])]},"general"==e?"umd":"es"),dev?js():r?uglifyES5():minify(minifyOpts),rename("app".concat(t,".min.js")),write(srcMapsWrite)],dest:"".concat(publicDest,"/js")}]})),[["src/js/app.vendor.js",{opts:{allowEmpty:!0},pipes:[dev?newer("".concat(publicDest,"/js/app.vendor.min.js")):null,init(),rollup({plugins:[builtins(),commonJS(),nodeResolve(),rollupJSON(),rollupBabel(babelConfig.node)]},"umd"),dev?js():minify(minifyOpts),dev?rename(minSuffix):null,write(srcMapsWrite)],dest:"".concat(publicDest,"/js")}]]))}),task("server",function(){return streamList([["server.js",{opts:{allowEmpty:!0},pipes:[dev?newer("./server.min.js"):void 0,rollup({plugins:[rollupJSON()]},"es"),rename(minSuffix)],dest:"."}]])}),task("config",function(){return streamList(new Promise(function(r,t){writeFile("./config.min.js","module.exports = ".concat(stringify(config),";"),function(e){if(e)throw t(),e;r()})}),["config.min.js",{opts:{allowEmpty:!0},pipes:[dev?newer("./config.min.js"):null,uglifyES5()],dest:"."}],["config.min.js",{opts:{allowEmpty:!0},pipes:[newer("./config-dev.js"),js({indent_size:4}),rename({basename:"config-dev",extname:".js"})],dest:"."}])}),task("config:watch",function(){return _exec("gulp config server html --gulpfile ./gulpfile.min.js")}),task("update",function(){return stream("gulpfile.js",{opts:{allowEmpty:!0},pipes:[rollup({plugins:[rollupJSON(),rollupBabel(babelConfig.node)]},"es"),uglifyES5(),rename(minSuffix)],dest:"."})}),task("gulpfile:watch",function(){return _execSeries("gulp update","gulp")}),task("git",function(){return _execSeries("git add .","git commit -m 'Upgrade'","git push -u origin master")}),task("inline",function(){return stream("public/*.html",{pipes:[inlineSrc({compress:!1})]})}),task("default",series("update","config",parallel("server","html","js"),"css","inline")),task("other",series("update","config",parallel("server","html"),"css","inline")),task("watch",function(){watch(["config.js","containers/*.js"],watchDelay,series("config:watch")),watch(["gulpfile.js","postcss.config.js","util/*.js","!util/*.min.js"],watchDelay,series("util","gulpfile:watch","server")),watch(["server.js","plugin.js"],watchDelay,series("server")),watch("views/**/*.pug",watchDelay,series("html","server","css","inline")),watch("src/**/*.scss",watchDelay,series("css","server","inline")),watch("src/**/*.js",watchDelay,series("js","server","inline"))});