{"version":3,"sources":["app.js"],"names":["assign","Object","El","el","document","querySelectorAll","fn","forEach","bind","prop","val","each","ele","set","fetch","then","console","log","message"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAQA,M,GAAWC,M,CAAXD,M;;IACFE,E;;;AACF,cAAYC,EAAZ,EAAgB;AAAA;;AACZ,SAAKA,EAAL,GAAWA,EAAE,YAAYD,EAAf,GAAqBC,EAAE,CAACA,EAAxB,sBAAiCC,QAAQ,CAACC,gBAAT,CAA0BF,EAA1B,CAAjC,CAAV;AACH;;;;2BAEmB;AAAA,UAAfG,EAAe,uEAAV,YAAM,CAAE,CAAE;AAChB,WAAKH,EAAL,CAAQI,OAAR,CAAgBD,EAAE,CAACE,IAAH,CAAQ,IAAR,CAAhB,EAA+B,IAA/B;AACA,aAAO,IAAP;AACH;;;wBAEGC,I,EAAMC,G,EAAK;AAAA;;AACX,aAAO,KAAKC,IAAL,CAAU,UAAAR,EAAE,EAAI;AACnB,wBAAeO,GAAf;AACI,eAAK,QAAL;AACI,gBAAI,QAAOP,EAAE,CAACM,IAAD,CAAT,KAAmB,QAAvB,EAAiC,KAAI,CAACN,EAAL,CAAQM,IAAR,IAAgB,EAAhB;AACjCT,YAAAA,MAAM,CAACG,EAAE,CAACM,IAAD,CAAH,EAAWC,GAAX,CAAN;AACA;;AACJ,eAAK,WAAL;AACIP,YAAAA,EAAE,GAAGM,IAAL;AACA;;AACJ;AACIN,YAAAA,EAAE,CAACM,IAAD,CAAF,GAAWC,GAAX;AATR;AAWH,OAZM,CAAP;AAaH;;;;KAGL;;;AACA,IAAIE,GAAG,GAAG,IAAIV,EAAJ,CAAO,MAAP,CAAV;AACAU,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiB,EAAjB;AACAC,KAAK,CAAC,sBAAD,CAAL,CACKC,IADL,CACUC,OAAO,CAACC,GADlB;AAGAD,OAAO,CAACC,GAAR,CAAY;AACRC,EAAAA,OAAO,EAAE;AADD,CAAZ","file":"app.min.js","sourcesContent":["const { assign } = Object;\nclass El {\n    constructor(el) {\n        this.el = (el instanceof El) ? el.el : [...document.querySelectorAll(el)];\n    }\n\n    each(fn = () => {}) {\n        this.el.forEach(fn.bind(this), this);\n        return this;\n    }\n\n    set(prop, val) {\n        return this.each(el => {\n            switch (typeof val) {\n                case 'object':\n                    if (typeof el[prop] != 'object') this.el[prop] = {};\n                    assign(el[prop], val);\n                    break;\n                case 'undefined':\n                    el = prop;\n                    break;\n                default:\n                    el[prop] = val;\n            }\n        });\n    }\n}\n\n// import \"core-js/stable\";\nlet ele = new El(\"body\");\nele.set(\"style\", { });\nfetch(\"/assets/raw/barba.js\")\n    .then(console.log);\n\nconsole.log({\n    message: \"Hello\"\n});\n"]}