"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,o=new Array(e.length);t<e.length;t++)o[t]=e[t];return o}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),e}require("./noConflict");var _global=_interopRequireDefault(require("core-js/library/fn/global"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}_global.default._babelPolyfill&&"undefined"!=typeof console&&console.warn&&console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."),_global.default._babelPolyfill=!0;var assign=Object.assign,El=function(){function t(e){_classCallCheck(this,t),this.el=e instanceof t?e.el:_toConsumableArray(document.querySelectorAll(e))}return _createClass(t,[{key:"each",value:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){};return this.el.forEach(e.bind(this),this),this}},{key:"set",value:function(t,o){var n=this;return this.each(function(e){switch(_typeof(o)){case"object":"object"!=_typeof(e[t])&&(n.el[t]={}),assign(e[t],o);break;case"undefined":e=t;break;default:e[t]=o}})}}]),t}(),ele=new El("body");ele.set("style",{}),fetch("/assets/raw/barba.js").then(console.log),console.log({message:"Hello"});
//# sourceMappingURL=app.min.js.map
