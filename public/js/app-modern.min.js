var {
  assign
} = Object;

class El {
  constructor(el) {
    this.el = el instanceof El ? el.el : [...document.querySelectorAll(el)];
  }

  each() {
    var fn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : () => {};
    this.el.forEach(fn.bind(this), this);
    return this;
  }

  set(prop, val) {
    return this.each(el => {
      switch (typeof val) {
        case 'object':
          if (typeof el[prop] != 'object') this.el[prop] = {};
          assign(el[prop], val);
          break;

        case 'undefined':
          el = prop;
          break;

        default:
          el[prop] = val;
      }
    });
  }

} // import "core-js/stable";


var ele = new El("body");
ele.set("style", {});
fetch("/assets/raw/barba.js").then(console.log);
console.log({
  message: "Hello"
});
//# sourceMappingURL=app-modern.min.js.map
