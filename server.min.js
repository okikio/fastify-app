'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var dotenv = _interopDefault(require('dotenv'));
var fastifyCompress = _interopDefault(require('fastify-compress'));
var fastifyNoIcon = _interopDefault(require('fastify-no-icon'));
var fastifyHelmet = _interopDefault(require('fastify-helmet'));
var fastifyCors = _interopDefault(require('fastify-cors'));
var fastify = _interopDefault(require('fastify'));
var morgan = _interopDefault(require('morgan'));
var path = _interopDefault(require('path'));
var fs = _interopDefault(require('fs'));
var stream = _interopDefault(require('stream'));
var fastifyPlugin = _interopDefault(require('fastify-plugin'));
var mimeTypes = _interopDefault(require('mime-types'));
var cloudinary = _interopDefault(require('cloudinary'));
var url = _interopDefault(require('url'));
var axios = _interopDefault(require('axios'));
var glob = _interopDefault(require('glob'));
var send = _interopDefault(require('send'));
var fastHtmlParser = _interopDefault(require('fast-html-parser'));

var config_min = {
  websiteURL: "https://app-fast.herokuapp.com/",
  cloud_name: "okikio-assets",
  imageURLConfig: {
    fetch_format: "auto",
    client_hints: !0,
    crop: "scale",
    quality: 30,
    dpr: "auto"
  },
  pages: {
    404: {
      page: {
        title: "Ooops!",
        tabs: {
          values: [{
            a: {
              href: "/about",
              content: "about"
            }
          }, {
            a: {
              href: "/projects",
              content: "projects"
            }
          }, {
            a: {
              href: "/contact",
              content: "contact"
            }
          }]
        },
        name: "404",
        values: [{
          layer: {
            "class": "layout-padding-horz layout-padding-large-top",
            layout: {
              "class": "layout-shorten layout-contain",
              values: [{
                section: {
                  title: "404, Page Not Found.",
                  type: "header"
                }
              }, {
                section: {
                  "class": "style-center",
                  values: [{
                    content: " ",
                    "class": "layout-padding-top layout-margin-left-large layout-inline-block"
                  }, "Sorry, the page you are looking for doesn't exist. How about going back ", {
                    a: {
                      href: "/",
                      content: "home"
                    }
                  }, "."],
                  type: "main"
                }
              }]
            }
          }
        }, {
          layer: {
            "class": "footer",
            layout: {
              section: {
                "class": "layout-padding style-center style-spaceout-small style-font-weight-bold style-font-title",
                values: ["2019 Okiki Ojo"]
              }
            }
          }
        }],
        noFooter: !0
      }
    },
    about: {
      page: {
        title: "The Sub Page",
        tabs: {
          values: [{
            a: {
              href: "/about",
              content: "about"
            }
          }, {
            a: {
              href: "/projects",
              content: "projects"
            }
          }, {
            a: {
              href: "/contact",
              content: "contact"
            }
          }]
        },
        name: "about",
        values: [{
          hero: {
            title: "Subpage.",
            img: {
              src: "/assets/white_car.webp?w=400&h=400",
              alt: "A city Image"
            }
          }
        }, {
          layer: {
            "class": "layout-padding-horz layout-padding-large-top",
            layout: {
              "class": "layout-shorten layout-contain",
              values: [{
                section: {
                  title: "Lorem itpsuim",
                  type: "header"
                }
              }, {
                section: {
                  values: [{
                    content: " ",
                    "class": "layout-padding-top layout-margin-left-large layout-inline-block"
                  }, "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer\n                                        took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\n                                        It was popularised in the 1960s with the release of Letraset sheets\n                                        containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum, ", {
                    a: {
                      href: "/",
                      content: "home"
                    }
                  }],
                  type: "main"
                }
              }]
            }
          }
        }, {
          layer: {
            "class": "footer",
            layout: {
              section: {
                "class": "layout-padding style-center style-spaceout-small style-font-weight-bold style-font-title",
                values: ["2019 Okiki Ojo"]
              }
            }
          }
        }],
        noFooter: !0
      }
    },
    index: {
      page: {
        title: "Hello There",
        tabs: {
          values: [{
            a: {
              href: "/about",
              content: "about"
            }
          }, {
            a: {
              href: "/projects",
              content: "projects"
            }
          }, {
            a: {
              href: "/contact",
              content: "contact"
            }
          }]
        },
        name: "index",
        values: [{
          hero: {
            title: "Relax.",
            img: {
              src: "/assets/white_car.webp?w=400&h=400",
              alt: "A city Image"
            }
          }
        }, {
          layer: {
            "class": "layout-padding-horz layout-padding-large-top",
            layout: {
              "class": "layout-shorten layout-contain",
              values: [{
                section: {
                  title: "Lorem itpsuim",
                  type: "header"
                }
              }, {
                section: {
                  values: [{
                    content: " ",
                    "class": "layout-padding-top layout-margin-left-large layout-inline-block"
                  }, "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer\n                                        took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\n                                        It was popularised in the 1960s with the release of Letraset sheets\n                                        containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum, ", {
                    a: {
                      href: "/about",
                      content: "run"
                    }
                  }],
                  type: "main"
                }
              }]
            }
          }
        }, {
          layer: {
            layout: {
              "class": "layout-padding-horz layout-padding-large-top",
              section: {
                "class": "layout-shorten layout-contain",
                values: [{
                  section: {
                    title: "Listings",
                    type: "header"
                  }
                }, {
                  section: {
                    "class": "layout-padding-top style-line-height-double",
                    values: [{
                      row: {
                        values: [{
                          col: {
                            "class": "layout-col-2 layout-padding-bottom-small",
                            values: [{
                              content: "03/03",
                              "class": "style-bold style-font-16"
                            }]
                          }
                        }, {
                          col: {
                            "class": "layout-col-3 layout-padding-bottom",
                            values: [{
                              content: "2018",
                              "class": "style-line-height-double style-bold layout-block style-font-16"
                            }, {
                              content: "E-commerse",
                              "class": "style-line-height-double layout-block style-font-16"
                            }, {
                              content: "Design Executive",
                              "class": "style-line-height-double layout-block style-font-16"
                            }]
                          }
                        }, {
                          col: {
                            "class": "layout-col-7",
                            values: [{
                              content: "Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                                        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\n                                                        unknown printer took a galley of type and scrambled it to make a type specimen book.",
                              "class": "style-line-height-double style-font-16"
                            }]
                          }
                        }]
                      }
                    }],
                    type: "main"
                  }
                }]
              }
            }
          }
        }, {
          layer: {
            layout: {
              "class": "layout-padding-horz layout-padding-vert-large layout-contain-large",
              values: [{
                section: {
                  title: "",
                  "class": "layout-vert style-bold-font style-500 h2",
                  values: ["Got your attention.", " ", {
                    content: "Good!",
                    "class": "style-color-primary"
                  }],
                  type: "header"
                }
              }]
            }
          }
        }, {
          layer: {
            "class": "layer-color-primary",
            layout: {
              "class": "layout-contain-large layout-enlarge-vert",
              values: [{
                section: {
                  title: "",
                  "class": "layout-vert style-bold-font style-500 h2 style-color-white",
                  values: ["Got your attention.", " ", {
                    content: "Good!",
                    "class": "style-color-tertiary"
                  }],
                  type: "header"
                }
              }]
            }
          }
        }, {
          layer: {
            "class": "layer-color-secondary",
            layout: {
              "class": "layout-contain-large layout-enlarge-vert",
              values: [{
                section: {
                  title: "",
                  "class": "layout-vert style-bold-font style-500 h2 style-color-white",
                  values: ["Got your attention.", " ", {
                    content: "Good!",
                    "class": "style-color-tertiary"
                  }],
                  type: "header"
                }
              }]
            }
          }
        }, {
          layer: {
            "class": "layer-color-tertiary",
            layout: {
              "class": "layout-contain-large layout-enlarge-vert",
              values: [{
                section: {
                  title: "",
                  "class": "layout-vert style-bold-font style-500 h2 style-color-dark",
                  values: ["Got your attention.", " ", {
                    content: "Good!",
                    "class": "style-color-secondary"
                  }],
                  type: "header"
                }
              }]
            }
          }
        }, {
          layer: {
            layout: {
              "class": "layout-contain-large layout-padding-horz layout-padding-large",
              values: [{
                section: {
                  "class": "layout-vert",
                  values: [{
                    row: {
                      values: [{
                        col: {
                          "class": "layout-col-6 layout-padding-bottom-small layout-padding-right-large",
                          values: [{
                            content: "Breakthrough<br>Limits!",
                            "class": "style-bold style-line-height h3 style-color-primary"
                          }]
                        }
                      }, {
                        col: {
                          "class": "layout-col-6",
                          values: [{
                            content: "Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                                                        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\n                                                        unknown printer took a galley of type and scrambled it to make a type specimen book.",
                            "class": "layout-block style-line-height-double style-font-16"
                          }]
                        }
                      }]
                    }
                  }],
                  type: "main"
                }
              }]
            }
          }
        }, {
          layer: {
            layout: {
              "class": "layout-contain-large",
              values: [{
                section: {
                  "class": "layout-shorten-vert",
                  values: [{
                    row: {
                      "class": "layout-margin-dull",
                      values: [{
                        col: {
                          "class": "layout-block layout-col-3"
                        }
                      }, {
                        col: {
                          "class": "layout-col-9 layout-padding-small",
                          values: [{
                            tile: {
                              title: "",
                              content: "",
                              "class": "layer-box layer-surface layer-shadow--1 layout-block"
                            }
                          }]
                        }
                      }]
                    }
                  }, {
                    row: {
                      "class": "layout-margin-dull",
                      values: [{
                        col: {
                          "class": "layout-col-9 layout-padding-small layout-padding-vert-large",
                          values: [{
                            tile: {
                              title: "Google Designs",
                              content: "",
                              img: {
                                src: "/assets/city.webp?w=250",
                                alt: "City Alt"
                              },
                              "class": "layer-box layer-surface layer-shadow--1 layout-block"
                            }
                          }]
                        }
                      }, {
                        col: {
                          "class": "layout-block layout-col-3"
                        }
                      }]
                    }
                  }],
                  type: "main"
                }
              }]
            }
          }
        }, {
          layer: {
            layout: {
              "class": "",
              values: [{
                section: {
                  values: [{
                    row: {
                      "class": "layout-margin-dull",
                      values: [{
                        col: {
                          "class": "layout-col-12 layout-padding-dull",
                          values: [{
                            tile: {
                              title: "",
                              content: "",
                              "class": "layer-box layer-box-flat layer-box-tall layer-surface layer-shadow--2 layout-block"
                            }
                          }]
                        }
                      }]
                    }
                  }],
                  type: "main"
                }
              }]
            }
          }
        }, {
          layer: {
            "class": "layer-color-black",
            layout: {
              "class": "layout-contain layout-padding-horz layout-padding-top",
              values: [{
                section: {
                  "class": "h4 layout-shorten",
                  values: [{
                    section: {
                      title: "Next",
                      "class": "style-color-white style-font-light style-font-thin style-spaceout",
                      type: "header"
                    }
                  }, {
                    section: {
                      "class": "style-center layout-padding-vert",
                      values: [{
                        content: "NASA Rocket Ship",
                        "class": "h1 style-bold style-primary"
                      }],
                      type: "main"
                    }
                  }]
                }
              }, {
                section: {
                  "class": "layer-box layer-box-flat layer-surface layer-shadow layout-block"
                }
              }]
            }
          }
        }],
        noFooter: !0
      }
    }
  },
  routes: {
    "/": "index",
    "/about": "about"
  },
  social_links: [{
    name: ["Twitter", "Tw"],
    href: "https://twitter.com/okikio_dev"
  }, {
    name: ["Instagram", "In"],
    href: "https://www.instagram.com/okikio.dev/"
  }, {
    name: ["Github", "Git"],
    href: "https://github.com/okikio"
  }, {
    name: ["LinkedIn", "Lk"],
    href: "https://www.linkedin.com/in/okiki-o-a5287213b"
  }, {
    name: ["Mail", "@"],
    href: "mailto:okikio.dev@gmail.com"
  }],
  projects: [{
    name: "Leader",
    url: "leader",
    detail: "Lorem itpsim",
    info: "The nature of leadership",
    img: {
      src: "/assets/white-flower.jpg",
      alt: ""
    }
  }, {
    name: "Science",
    url: "science",
    detail: "Lorem itpsim",
    info: "Info about Leukemia",
    img: {
      src: "/assets/city.jpg",
      alt: ""
    }
  }, {
    name: "Civics",
    url: "civics",
    detail: "Lorem itpsim",
    info: "A little about renewable sources of energy",
    img: {
      src: "/assets/blue-sky.jpg",
      alt: ""
    }
  }]
};

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

var statSync = fs.statSync,
    createReadStream = fs.createReadStream;
var PassThrough = stream.PassThrough;
var lookup = mimeTypes.lookup;
var assets = cloudinary.v2;
var parse = url.parse;
var websiteURL = config_min.websiteURL,
    cloud_name = config_min.cloud_name,
    imageURLConfig = config_min.imageURLConfig;
assets.config({
  cloud_name: cloud_name,
  secure: true
}); // For faster efficient page switching using partial output

var _render = fastifyPlugin(function (app, opts, next) {
  // Selector for the partial output
  var partialSel = opts.partial || '[data-barba="container"]';
  var root = opts.root || path.join(__dirname, 'public'); // Root for file
  // Simplify path to file

  app.cache || app.decorate('cache', {}); // Simplify path to file

  app.decorate('path', function (filePath, _root) {
    var _ext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ".html";

    return "".concat(_root ? _root + "/" : "").concat(filePath.replace(_ext, "")).concat(_ext);
  }); // Partial Render

  app.decorateReply('partial', function (filePath) {
    var file = app.path(filePath, root);
    var key = "".concat(file, "__partial__fastify");
    var dom,
        data = "",
        res = this;

    if (key in app.cache) {
      res.type("text/html").send(app.cache[key]);
    } else {
      createReadStream(file).on("data", function (val) {
        data += val;
      }).on("error", function (err) {
        res.log.error(err);
      }).on("close", function () {
        dom = fastHtmlParser.parse(data).querySelector(partialSel);
        app.cache[key] = dom.outerHTML;
        res.type("text/html").send(app.cache[key]);
      });
    }

    return res;
  }); // HTML Render

  app.decorateReply('html', function (filePath) {
    var file = app.path(filePath, root);
    var key = "".concat(file, "__fastify");
    var data = "",
        res = this;

    if (key in app.cache) {
      res.type("text/html").send(app.cache[key]);
    } else {
      createReadStream(file).on("data", function (val) {
        data += val;
      }).on("error", function (err) {
        res.log.error(err);
      }).on("close", function () {
        app.cache[key] = data;
        res.type("text/html").send(data);
      });
    }

    return res;
  }); // Render Engine

  app.decorateReply('render', function (filePath, partial) {
    var file = app.path(filePath);
    return partial ? this.partial(file) : this.html(file);
  });
  next();
}); // Based on fastify-static


var _static = fastifyPlugin(function (app, opts, next) {
  if (opts.prefix == undefined) opts.prefix = '/';
  var prefix = opts.prefix[opts.prefix.length - 1] == '/' ? opts.prefix : opts.prefix + '/';
  var schema = {
    schema: {
      hide: typeof opts.schemaHide != 'undefined' ? opts.schemaHide : true
    }
  };

  var _err = function _err(msg) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Error;
    return next(new type(msg));
  };

  var root = opts.root,
      setHeaders = opts.setHeaders;
  var pathStat,
      sendOpts = {
    lastModified: opts.lastModified,
    acceptRanges: opts.acceptRanges,
    cacheControl: opts.cacheControl,
    extensions: opts.extensions,
    immutable: opts.immutable,
    dotfiles: opts.dotfiles,
    maxAge: opts.maxAge,
    index: opts.index,
    root: opts.root,
    etag: opts.etag
  };

  if (root == undefined) {
    return _err('"root" option is required');
  }

  if (typeof root != 'string') {
    return _err('"root" option must be a string');
  }

  if (!path.isAbsolute(root)) {
    return _err('"root" option must be an absolute path');
  }

  try {
    pathStat = statSync(root);

    if (!pathStat.isDirectory()) {
      return _err('"root" option must point to a directory');
    }

    if (setHeaders != undefined && typeof setHeaders != 'function') {
      return _err('The `setHeaders` option must be a function', TypeError);
    }
  } catch (e) {
    return e.code == 'ENOENT' ? app.log.warn("\"root\" path \"".concat(root, "\" must exist")) : e;
  } // Simplify path to file


  app.cache || app.decorate('cache', {}); // Pumps `send` to the reply/response Object

  app.decorate('sendReply', function (req, reply, path) {
    var stream,
        file,
        wrap,
        key = "static__".concat(path, "__fastify");
    reply.header("cache-control", "public, max-age=".concat(opts.maxAge));

    if (key in app.cache) {
      reply.type(lookup(path)).send(app.cache[key]);
    } else {
      stream = send(req.raw, path, sendOpts);
      stream.on('file', function (_file) {
        file = _file;
      });
      wrap = new PassThrough({
        flush: function flush(fn) {
          if (reply.res.statusCode == 304) reply.send('');
          this.finished = true;
          fn();
        }
      });
      Object.assign(wrap, {
        getHeader: reply.getHeader.bind(reply),
        setHeader: reply.header.bind(reply),
        socket: req.raw.socket,
        finished: false
      });
      Object.defineProperties(wrap, {
        "filename": {
          get: function get() {
            return file;
          }
        },
        "statusCode": {
          get: function get() {
            return reply.res.statusCode;
          },
          set: function set(code) {
            reply.code(code);
          }
        }
      });
      wrap.on('pipe', function (val) {
        reply.send(val);
      }).on('data', function (val) {
        app.cache[key] = Buffer.from(val).toString();
      });

      if (setHeaders != undefined) {
        stream.on('headers', setHeaders);
      }

      if (opts.redirect == true) {
        stream.on('directory', function () {
          var parsed = parse(req.raw.url);
          reply.redirect(301, parsed.pathname + '/' + (parsed.search || ''));
        });
      }

      stream.on('error', function (err) {
        if (err) {
          if (err.code == 'ENOENT') return reply.callNotFound();
          reply.send(err);
        }
      });
      stream.pipe(wrap);
    }
  });

  if (opts.decorateReply !== false) {
    app.decorateReply('sendFile', function (filePath) {
      app.sendReply(this.request, this, filePath);
    });
  }

  if (opts.serve != false) {
    if (opts.wildcard == undefined || opts.wildcard == true) {
      app.get(prefix + '*', schema, function (req, res) {
        app.sendReply(req, res, '/' + req.params['*']);
      });

      if (opts.redirect && prefix != opts.prefix) {
        app.get(opts.prefix, schema, function (req, res) {
          var parsed = parse(req.raw.url);
          res.redirect(301, parsed.pathname + '/' + (parsed.search || ''));
        });
      }
    } else {
      var globPattern = typeof opts.wildcard == 'string' ? opts.wildcard : '**/*';
      glob(path.join(sendOpts.root, globPattern), {
        nodir: true
      }, function (err, files) {
        if (err) return next(err);
        var indexDirs = new Set(),
            route,
            pathname,
            file;
        var indexes = typeof opts.index == 'undefined' ? ['index.html'] : [].concat(opts.index || []);
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _file = _step.value;
            file = _file.replace(sendOpts.root.replace(/\\/g, '/'), '').replace(/^\//, '');
            route = (prefix + file).replace(/\/\//g, '/');
            app.get(route, schema, function (req, res) {
              app.sendReply(req, res, '/' + file);
            });

            if (indexes.includes(path.posix.basename(route))) {
              indexDirs.add(path.posix.dirname(route));
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator["return"] != null) {
              _iterator["return"]();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        indexDirs.forEach(function (dirname) {
          pathname = dirname + (dirname.endsWith('/') ? '' : '/');
          file = '/' + pathname.replace(prefix, '');
          app.get(pathname, schema, function (req, res) {
            app.sendReply(req, res, file);
          });

          if (opts.redirect) {
            app.get(pathname.replace(/\/$/, ''), schema, function (req, res) {
              app.sendReply(req, res, file.replace(/\/$/, ''));
            });
          }
        });
        next();
      });
      return; // Stop
    }
  }

  next();
});

var _assets = fastifyPlugin(function (app, opts, next) {
  var maxAge = opts.maxAge; // Load and cache assets eg: /assets/city.webp?w=100 or /assets/app.js

  app.get("/assets/*", function (req, res) {
    var asset = req.raw.url.replace("/assets/", "");
    var URLObj = parse(req.raw.url, true);
    var queryStr = URLObj.search;
    var query = URLObj.query;
    var key = "assets__".concat(URLObj.path, "__fastify");
    res.header("cache-control", "public, max-age=".concat(maxAge));

    if (key in app.cache) {
      var val = app.cache[key];

      if (val.type) {
        res.type(val.type).send(val.data);
      } else {
        res.send(val.data);
      }
    } else {
      asset = asset.replace(queryStr, '');
      var type = lookup(asset) || 'text/plain';
      var media = /image|video|audio/g.test(type);

      var _url, height, width, imgURLConfig;

      if (media) {
        height = query.h;
        width = query.w || 'auto';
        imgURLConfig = _objectSpread2({}, imageURLConfig, {
          width: width,
          height: height
        });
        _url = assets.url(asset, imgURLConfig);
      } else {
        _url = assets.url(asset).replace("image", "raw");
      }

      axios.get(_url, media ? {
        responseType: 'arraybuffer'
      } : undefined).then(function (val) {
        if (media) {
          var buf = Buffer.from(val.data, 'base64');
          app.cache[key] = {
            type: type,
            data: buf
          };
          return res.type(type).send(buf);
        }

        app.cache[key] = val;
        return res.send(val.data);
      })["catch"](function (err) {
        res.send(err.message);
        app.log.error(err);
      });
    }
  });
  next();
});

var _reload = fastifyPlugin(function (app, opts, next) {
  // Time till reload of website (in minutes)
  var reloadTime = 1000 * 60 * (opts.reloadTime || 29);
  app.reloadCount || app.decorate('reloadCount', 0); // Reload count

  setInterval(function () {
    axios.get(websiteURL).then(function () {
      return console.log("The Heroku server has been reloaded ".concat(++app.reloadCount, " times"));
    })["catch"](console.error);
  }, reloadTime);
  next();
});

var plugin_1 = {
  _render: _render,
  _static: _static,
  _assets: _assets,
  _reload: _reload
};

var _process = process,
    env = _process.env;
if (!('dev' in env)) dotenv.config();
var dev = 'dev' in env && env.dev.toString() == "true";
var heroku = 'heroku' in env && env.heroku.toString() == "true"; // List of routes

var routes = config_min.routes;
var _render$1 = plugin_1._render,
    _static$1 = plugin_1._static,
    _assets$1 = plugin_1._assets; // Possibly faster: https://nanoexpress.js.org/middlewares.html
// Normalize a port into a number, string, or false.

var normalizePort = function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  } // Named pipe


  if (port >= 0) {
    return port;
  } // Port number


  return false;
};

var HOST = heroku ? '0.0.0.0' : 'localhost';
var root = path.join(__dirname, 'public');
var PORT = normalizePort(process.env.PORT || 3000);
var maxAge = (dev ? 0 : 1) * 1000 * 60 * 60 * 24 * 7;
var app = fastify({
  logger: dev && {
    prettyPrint: {
      translateTime: "hh:MM:ss TT",
      ignore: 'pid,hostname,reqId' // --ignore

    }
  },
  ignoreTrailingSlash: true,
  caseSensitive: false
});
app.use(morgan('dev')) // Simple HTTP Logging
.register(fastifyCompress) // Compress/GZIP/Brotil Server
.register(fastifyHelmet) // Protect server
.register(fastifyNoIcon) // Remove the no favicon error
.register(_render$1, {
  partial: "#swup"
}) // Render Plugin
.register(_assets$1, {
  maxAge: maxAge
}) // Assets Plugin
// Apply CORS
.register(fastifyCors, {
  methods: ['GET', 'PUT', 'POST'],
  cacheControl: true,
  maxAge: maxAge,
  preflightContinue: true,
  preflight: true
}) // Server Static File
.register(_static$1, {
  cacheControl: true,
  maxAge: maxAge,
  root: root
}); // Routes and the pages to render

var _loop = function _loop(i) {
  app.get(i, function (req, res) {
    res.header("cache-control", "public, max-age=".concat(maxAge));
    res.render(routes[i], req.headers["x-partial"]);
  });
};

for (var i in routes) {
  _loop(i);
} // Error handling


app.setNotFoundHandler(function (req, res) {
  res.code(404).type(req.headers["content-type"] || 'text/plain').render("404", req.headers["x-partial"]);
});
app.setErrorHandler(function (err, req, res) {
  var statusCode = err.statusCode >= 400 ? err.statusCode : 500;
  req.log.warn(err);
  res.code(statusCode).type(req.headers["content-type"] || 'text/plain').send(statusCode >= 500 ? "Internal server error" : err.message);
});
app.listen(PORT, HOST, function (err) {
  if (err) app.log.error(err);
  app.log.info("Server listening on port", PORT);
});
var server = {};

module.exports = server;
