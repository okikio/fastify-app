let{env:env}=process;"dev"in env||require("dotenv").config();let dev="dev"in env&&"true"==env.dev.toString(),heroku="heroku"in env&&"true"==env.heroku.toString();const compress=require("fastify-compress"),noIcon=require("fastify-no-icon"),helmet=require("fastify-helmet"),cors=require("fastify-cors"),fastify=require("fastify"),path=require("path");let{routes:routes}=require("./config.min"),{_render:_render,_static:_static,_assets:_assets}=require("./plugin"),normalizePort=e=>{let r=parseInt(e,10);return isNaN(r)?e:r>=0&&r},HOST=heroku?"0.0.0.0":"localhost",root=path.join(__dirname,"public"),PORT=normalizePort(process.env.PORT||3e3),maxAge=1e3*(dev?0:1)*60*60*24*7,app=fastify({logger:{prettyPrint:{translateTime:"hh:MM:ss TT"}},ignoreTrailingSlash:!0,caseSensitive:!1});app.register(compress).register(helmet).register(noIcon).register(_render,{partial:"#swup"}).register(_assets,{maxAge:maxAge}).register(cors,{methods:["GET","PUT","POST"],cacheControl:!0,maxAge:maxAge,preflightContinue:!0,preflight:!0}).register(_static,{cacheControl:!0,maxAge:maxAge,root:root});for(let e in routes)app.get(e,(r,t)=>{t.header("cache-control",`public, max-age=${maxAge}`),t.render(routes[e],r.headers["x-partial"])});app.setNotFoundHandler((e,r)=>{r.code(404).type(e.headers["content-type"]||"text/plain").send("A custom not found")}),app.setErrorHandler((e,r,t)=>{let o=e.statusCode>=400?e.statusCode:500;r.log.warn(e),t.code(o).type(r.headers["content-type"]||"text/plain").send(o>=500?"Internal server error":e.message)}),app.listen(PORT,HOST,e=>{e&&app.log.error(e),app.log.info("Server listening on port",PORT)});