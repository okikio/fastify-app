/* -- Presets & Resets -- */
/* -- Elements -- */
* {

    &,
    &:before,
    &:after {
        box-sizing: border-box;
        font-size: 100%;
        outline: none;
        resize: none;
        border: none;
        padding: 0;
        margin: 0;
    }
}

html,
body {
    text-rendering: optimizeLegibility;
    font-family: $regular-font;
    background: $background;
    word-wrap: break-word;
    line-height: 1.15;
    font-weight: 400;
    font-size: 15px;
    // height: 100vh;
    color: $dark;

    @media (max-width: 300px) {
        word-break: break-all;
    }
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: inherit;
    line-height: 1.15;
    font-weight: 400;
    color: inherit;
    display: block;
}

h1,
.h1 {
    margin: 2.1rem 0 1.68rem 0;
    font-weight: 900;
}

h2,
.h2 {
    margin: 1.78rem 0 1.424rem 0;
    font-weight: 700;
}

h3,
.h3 {
    margin: 1.46rem 0 1.168rem 0;
    font-weight: 600;
}

h4,
.h4 {
    margin: 1.14rem 0 0.912rem 0;
}

h5,
.h5 {
    margin: 0.82rem 0 0.656rem 0;
}

h6,
.h6 {
    margin: 0.5rem 0 0.4rem 0;
}

p,
.p {
    margin: 0 2em 10px 2em;
}

$headerSizes: (4.2rem, 3.56rem, 2.92rem, 2.28rem, 1.64rem, 1rem);
@each $sz in $headerSizes {
    $i: index($headerSizes, $sz);
    h#{$i} { font-size: $sz; }
    .h#{$i} { font-size: $sz !important; }
}

img,
load-img {
    min-height: 200px;
    display: block;
    border: none;
    width: 100%;
}

load-img {
    animation: load 0.5s ease infinite alternate;
    background: $mid-light;
    min-height: 300px;
}

@keyframes load {
    to {
        background: $mid-dark;
    }
}

a {
    text-decoration: none;
    display: inline-block;
    color: $secondary;
    cursor: pointer;

    &:hover,
    &:focus {
        text-decoration: underline;
        color: $secondary-dark;
    }
}

ul,
ol {
    list-style-type: disc;
    margin: 20px 2em;
    display: block;
}

ol {
    list-style-type: decimal;
}

ul ul,
ol ul {
    list-style-type: circle;
}

li {
    text-align: inherit;
    display: list-item;
}

.list-none {
    list-style: none;
}